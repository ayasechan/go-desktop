// Code generated by genole; DO NOT EDIT.

package desktop

import (
	"github.com/go-ole/go-ole"
	"syscall"
	"unsafe"
)

import ()

var IID_IApplicationView = ole.NewGUID("372E1D3B-38D3-42E4-A15B-8AB2B178F513")

type IApplicationView struct {
	ole.IInspectable
}
type IApplicationViewVtbl struct {
	ole.IInspectableVtbl
	SetFocus                    uintptr
	SwitchTo                    uintptr
	TryInvokeBack               uintptr
	GetThumbnailWindow          uintptr
	GetMonitor                  uintptr
	GetVisibility               uintptr
	SetCloak                    uintptr
	GetPosition                 uintptr
	SetPosition                 uintptr
	InsertAfterWindow           uintptr
	GetExtendedFramePosition    uintptr
	GetAppUserModelId           uintptr
	SetAppUserModelId           uintptr
	IsEqualByAppUserModelId     uintptr
	GetViewState                uintptr
	SetViewState                uintptr
	GetNeediness                uintptr
	GetLastActivationTimestamp  uintptr
	SetLastActivationTimestamp  uintptr
	GetVirtualDesktopId         uintptr
	SetVirtualDesktopId         uintptr
	GetShowInSwitchers          uintptr
	SetShowInSwitchers          uintptr
	GetScaleFactor              uintptr
	CanReceiveInput             uintptr
	GetCompatibilityPolicyType  uintptr
	SetCompatibilityPolicyType  uintptr
	GetSizeConstraints          uintptr
	GetSizeConstraintsForDpi    uintptr
	SetSizeConstraintsForDpi    uintptr
	OnMinSizePreferencesUpdated uintptr
	ApplyOperation              uintptr
	IsTray                      uintptr
	IsInHighZOrderBand          uintptr
	IsSplashScreenPresented     uintptr
	Flash                       uintptr
	GetRootSwitchableOwner      uintptr
	EnumerateOwnershipTree      uintptr
	GetEnterpriseId             uintptr
	IsMirrored                  uintptr
	Unknown1                    uintptr
	Unknown2                    uintptr
	Unknown3                    uintptr
	Unknown4                    uintptr
	Unknown5                    uintptr
	Unknown6                    uintptr
	Unknown7                    uintptr
	Unknown8                    uintptr
	Unknown9                    uintptr
	Unknown10                   uintptr
	Unknown11                   uintptr
	Unknown12                   uintptr
}

func (v *IApplicationView) VTable() *IApplicationViewVtbl {
	return (*IApplicationViewVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IApplicationView) SetFocus() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetFocus, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SwitchTo() error {
	hr, _, _ := syscall.Syscall(v.VTable().SwitchTo, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) TryInvokeBack(p0 *IAsyncCallback) error {
	hr, _, _ := syscall.Syscall(v.VTable().TryInvokeBack, 2, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(p0)), 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetThumbnailWindow() (uintptr, error) {
	var p0_0 uintptr
	hr, _, _ := syscall.Syscall(v.VTable().GetThumbnailWindow, 2, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(&p0_0)), 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return p0_0, err
}

//
func (v *IApplicationView) GetMonitor() (*IImmersiveMonitor, error) {
	var p0_0 *IImmersiveMonitor
	hr, _, _ := syscall.Syscall(v.VTable().GetMonitor, 2, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(&p0_0)), 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return p0_0, err
}

//
func (v *IApplicationView) GetVisibility() (int, error) {
	var p0_0 int
	hr, _, _ := syscall.Syscall(v.VTable().GetVisibility, 2, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(&p0_0)), 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return p0_0, err
}

//
func (v *IApplicationView) SetCloak(p0 APPLICATION_VIEW_CLOAK_TYPE, p1 uint) error {
	hr, _, _ := syscall.Syscall6(v.VTable().SetCloak, 3, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(&p0)), uintptr(p1), 0, 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetPosition() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetPosition, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetPosition() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetPosition, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) InsertAfterWindow() error {
	hr, _, _ := syscall.Syscall(v.VTable().InsertAfterWindow, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetExtendedFramePosition() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetExtendedFramePosition, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetAppUserModelId() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetAppUserModelId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetAppUserModelId() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetAppUserModelId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) IsEqualByAppUserModelId() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsEqualByAppUserModelId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetViewState() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewState, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetViewState() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetViewState, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetNeediness() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetNeediness, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetLastActivationTimestamp() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetLastActivationTimestamp, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetLastActivationTimestamp() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetLastActivationTimestamp, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetVirtualDesktopId() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetVirtualDesktopId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetVirtualDesktopId() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetVirtualDesktopId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetShowInSwitchers() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetShowInSwitchers, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetShowInSwitchers() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetShowInSwitchers, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetScaleFactor() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetScaleFactor, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) CanReceiveInput() error {
	hr, _, _ := syscall.Syscall(v.VTable().CanReceiveInput, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetCompatibilityPolicyType() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetCompatibilityPolicyType, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetCompatibilityPolicyType() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetCompatibilityPolicyType, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetSizeConstraints() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetSizeConstraints, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetSizeConstraintsForDpi() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetSizeConstraintsForDpi, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) SetSizeConstraintsForDpi() error {
	hr, _, _ := syscall.Syscall(v.VTable().SetSizeConstraintsForDpi, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) OnMinSizePreferencesUpdated() error {
	hr, _, _ := syscall.Syscall(v.VTable().OnMinSizePreferencesUpdated, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) ApplyOperation() error {
	hr, _, _ := syscall.Syscall(v.VTable().ApplyOperation, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) IsTray() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsTray, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) IsInHighZOrderBand() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsInHighZOrderBand, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) IsSplashScreenPresented() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsSplashScreenPresented, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Flash() error {
	hr, _, _ := syscall.Syscall(v.VTable().Flash, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetRootSwitchableOwner() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetRootSwitchableOwner, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) EnumerateOwnershipTree() error {
	hr, _, _ := syscall.Syscall(v.VTable().EnumerateOwnershipTree, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) GetEnterpriseId() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetEnterpriseId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) IsMirrored() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsMirrored, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown1() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown1, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown2() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown2, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown3() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown3, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown4() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown4, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown5() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown5, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown6() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown6, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown7() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown7, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown8() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown8, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown9() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown9, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown10() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown10, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown11() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown11, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationView) Unknown12() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown12, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IApplicationViewCollection = ole.NewGUID("1841C6D7-4F9D-42C0-AF41-8747538F10E5")

type IApplicationViewCollection struct {
	ole.IUnknown
}
type IApplicationViewCollectionVtbl struct {
	ole.IUnknownVtbl
	GetViews                            uintptr
	GetViewsByZOrder                    uintptr
	GetViewsByAppUserModelId            uintptr
	GetViewForHwnd                      uintptr
	GetViewForApplication               uintptr
	GetViewForAppUserModelId            uintptr
	GetViewInFocus                      uintptr
	Unknown1                            uintptr
	RefreshCollection                   uintptr
	RegisterForApplicationViewChanges   uintptr
	UnregisterForApplicationViewChanges uintptr
}

func (v *IApplicationViewCollection) VTable() *IApplicationViewCollectionVtbl {
	return (*IApplicationViewCollectionVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IApplicationViewCollection) GetViews() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViews, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) GetViewsByZOrder() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewsByZOrder, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) GetViewsByAppUserModelId() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewsByAppUserModelId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) GetViewForHwnd() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewForHwnd, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) GetViewForApplication() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewForApplication, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) GetViewForAppUserModelId() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewForAppUserModelId, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) GetViewInFocus() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetViewInFocus, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) Unknown1() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unknown1, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) RefreshCollection() error {
	hr, _, _ := syscall.Syscall(v.VTable().RefreshCollection, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) RegisterForApplicationViewChanges() error {
	hr, _, _ := syscall.Syscall(v.VTable().RegisterForApplicationViewChanges, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IApplicationViewCollection) UnregisterForApplicationViewChanges() error {
	hr, _, _ := syscall.Syscall(v.VTable().UnregisterForApplicationViewChanges, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IApplicationViewConsolidatedEventArgs = ole.NewGUID("514449EC-7EA2-4DE7-A6A6-7DFBAAEBB6FB")

type IApplicationViewConsolidatedEventArgs struct {
	ole.IInspectable
}
type IApplicationViewConsolidatedEventArgsVtbl struct {
	ole.IInspectableVtbl
	GetIsUserInitiated uintptr
}

func (v *IApplicationViewConsolidatedEventArgs) VTable() *IApplicationViewConsolidatedEventArgsVtbl {
	return (*IApplicationViewConsolidatedEventArgsVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IApplicationViewConsolidatedEventArgs) GetIsUserInitiated() error {
	hr, _, _ := syscall.Syscall(v.VTable().GetIsUserInitiated, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IVirtualDesktopNotification = ole.NewGUID("C179334C-4295-40D3-BEA1-C654D965605A")

type IVirtualDesktopNotification struct {
	ole.IUnknown
}
type IVirtualDesktopNotificationVtbl struct {
	ole.IUnknownVtbl
	VirtualDesktopCreated        uintptr
	VirtualDesktopDestroyBegin   uintptr
	VirtualDesktopDestroyFailed  uintptr
	VirtualDesktopDestroyed      uintptr
	ViewVirtualDesktopChanged    uintptr
	CurrentVirtualDesktopChanged uintptr
}

func (v *IVirtualDesktopNotification) VTable() *IVirtualDesktopNotificationVtbl {
	return (*IVirtualDesktopNotificationVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IVirtualDesktopNotification) VirtualDesktopCreated() error {
	hr, _, _ := syscall.Syscall(v.VTable().VirtualDesktopCreated, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopNotification) VirtualDesktopDestroyBegin() error {
	hr, _, _ := syscall.Syscall(v.VTable().VirtualDesktopDestroyBegin, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopNotification) VirtualDesktopDestroyFailed() error {
	hr, _, _ := syscall.Syscall(v.VTable().VirtualDesktopDestroyFailed, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopNotification) VirtualDesktopDestroyed() error {
	hr, _, _ := syscall.Syscall(v.VTable().VirtualDesktopDestroyed, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopNotification) ViewVirtualDesktopChanged() error {
	hr, _, _ := syscall.Syscall(v.VTable().ViewVirtualDesktopChanged, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopNotification) CurrentVirtualDesktopChanged() error {
	hr, _, _ := syscall.Syscall(v.VTable().CurrentVirtualDesktopChanged, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IVirtualDesktopNotificationService = ole.NewGUID("0CD45E71-D927-4F15-8B0A-8FEF525337BF")

type IVirtualDesktopNotificationService struct {
	ole.IUnknown
}
type IVirtualDesktopNotificationServiceVtbl struct {
	ole.IUnknownVtbl
	Register   uintptr
	Unregister uintptr
}

func (v *IVirtualDesktopNotificationService) VTable() *IVirtualDesktopNotificationServiceVtbl {
	return (*IVirtualDesktopNotificationServiceVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IVirtualDesktopNotificationService) Register() error {
	hr, _, _ := syscall.Syscall(v.VTable().Register, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopNotificationService) Unregister() error {
	hr, _, _ := syscall.Syscall(v.VTable().Unregister, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IVirtualDesktopPinnedApps = ole.NewGUID("4CE81583-1E4C-4632-A621-07A53543148F")

type IVirtualDesktopPinnedApps struct {
	ole.IUnknown
}
type IVirtualDesktopPinnedAppsVtbl struct {
	ole.IUnknownVtbl
	IsAppIdPinned uintptr
	PinAppID      uintptr
	UnpinAppID    uintptr
	IsViewPinned  uintptr
	PinView       uintptr
	UnpinView     uintptr
}

func (v *IVirtualDesktopPinnedApps) VTable() *IVirtualDesktopPinnedAppsVtbl {
	return (*IVirtualDesktopPinnedAppsVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IVirtualDesktopPinnedApps) IsAppIdPinned() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsAppIdPinned, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopPinnedApps) PinAppID() error {
	hr, _, _ := syscall.Syscall(v.VTable().PinAppID, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopPinnedApps) UnpinAppID() error {
	hr, _, _ := syscall.Syscall(v.VTable().UnpinAppID, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopPinnedApps) IsViewPinned() error {
	hr, _, _ := syscall.Syscall(v.VTable().IsViewPinned, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopPinnedApps) PinView() error {
	hr, _, _ := syscall.Syscall(v.VTable().PinView, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

//
func (v *IVirtualDesktopPinnedApps) UnpinView() error {
	hr, _, _ := syscall.Syscall(v.VTable().UnpinView, 1, uintptr(unsafe.Pointer(v)), 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IObjectArray = ole.NewGUID("92CA9DCD-5622-4BBA-A805-5E9F541BD8C9")

type IObjectArray struct {
	ole.IUnknown
}
type IObjectArrayVtbl struct {
	ole.IUnknownVtbl
	GetCount uintptr
	GetAt    uintptr
}

func (v *IObjectArray) VTable() *IObjectArrayVtbl {
	return (*IObjectArrayVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IObjectArray) GetCount() (uint, error) {
	var count_0 uint
	hr, _, _ := syscall.Syscall(v.VTable().GetCount, 2, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(&count_0)), 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return count_0, err
}

//
func (v *IObjectArray) GetAt(idx uint, riid *ole.GUID, ppv uintptr) error {
	hr, _, _ := syscall.Syscall6(v.VTable().GetAt, 4, uintptr(unsafe.Pointer(v)), uintptr(idx), uintptr(unsafe.Pointer(riid)), ppv, 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IServiceProvider = ole.NewGUID("6D5140C1-7436-11CE-8034-00AA006009FA")

type IServiceProvider struct {
	ole.IUnknown
}
type IServiceProviderVtbl struct {
	ole.IUnknownVtbl
	QueryService uintptr
}

func (v *IServiceProvider) VTable() *IServiceProviderVtbl {
	return (*IServiceProviderVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IServiceProvider) QueryService(guidService *ole.GUID, riid *ole.GUID, ppvObject uintptr) error {
	hr, _, _ := syscall.Syscall6(v.VTable().QueryService, 4, uintptr(unsafe.Pointer(v)), uintptr(unsafe.Pointer(guidService)), uintptr(unsafe.Pointer(riid)), ppvObject, 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}

var IID_IVirtualDesktopManager = ole.NewGUID("A5CD92FF-29BE-454C-8D04-D82879FB3F1B")

type IVirtualDesktopManager struct {
	ole.IUnknown
}
type IVirtualDesktopManagerVtbl struct {
	ole.IUnknownVtbl
	IsWindowOnCurrentVirtualDesktop uintptr
	GetWindowDesktopId              uintptr
	MoveWindowToDesktop             uintptr
}

func (v *IVirtualDesktopManager) VTable() *IVirtualDesktopManagerVtbl {
	return (*IVirtualDesktopManagerVtbl)(unsafe.Pointer(v.RawVTable))
}

//
func (v *IVirtualDesktopManager) IsWindowOnCurrentVirtualDesktop(hwnd uintptr) (bool, error) {
	var r_1 bool
	hr, _, _ := syscall.Syscall6(v.VTable().IsWindowOnCurrentVirtualDesktop, 3, uintptr(unsafe.Pointer(v)), hwnd, uintptr(unsafe.Pointer(&r_1)), 0, 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return r_1, err
}

// 不能传入桌面的句柄 否则会报错
func (v *IVirtualDesktopManager) GetWindowDesktopId(hwnd uintptr) (ole.GUID, error) {
	var id_1 ole.GUID
	hr, _, _ := syscall.Syscall6(v.VTable().GetWindowDesktopId, 3, uintptr(unsafe.Pointer(v)), hwnd, uintptr(unsafe.Pointer(&id_1)), 0, 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return id_1, err
}

// https://stackoverflow.com/questions/32659505/windows-10-ivirtualdesktopmanagermovewindowtodesktop
func (v *IVirtualDesktopManager) MoveWindowToDesktop(hwnd uintptr, id ole.GUID) error {
	hr, _, _ := syscall.Syscall6(v.VTable().MoveWindowToDesktop, 3, uintptr(unsafe.Pointer(v)), hwnd, uintptr(unsafe.Pointer(&id)), 0, 0, 0)
	var err error
	if hr > 0 {
		err = ole.NewError(hr)
	}
	return err
}
